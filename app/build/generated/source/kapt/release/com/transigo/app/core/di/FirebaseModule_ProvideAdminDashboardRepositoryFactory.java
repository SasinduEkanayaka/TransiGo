// Generated by Dagger (https://dagger.dev).
package com.transigo.app.core.di;

import com.google.firebase.firestore.FirebaseFirestore;
import com.transigo.app.data.repository.AdminDashboardRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class FirebaseModule_ProvideAdminDashboardRepositoryFactory implements Factory<AdminDashboardRepository> {
  private final Provider<FirebaseFirestore> firestoreProvider;

  public FirebaseModule_ProvideAdminDashboardRepositoryFactory(
      Provider<FirebaseFirestore> firestoreProvider) {
    this.firestoreProvider = firestoreProvider;
  }

  @Override
  public AdminDashboardRepository get() {
    return provideAdminDashboardRepository(firestoreProvider.get());
  }

  public static FirebaseModule_ProvideAdminDashboardRepositoryFactory create(
      Provider<FirebaseFirestore> firestoreProvider) {
    return new FirebaseModule_ProvideAdminDashboardRepositoryFactory(firestoreProvider);
  }

  public static AdminDashboardRepository provideAdminDashboardRepository(
      FirebaseFirestore firestore) {
    return Preconditions.checkNotNullFromProvides(FirebaseModule.INSTANCE.provideAdminDashboardRepository(firestore));
  }
}
