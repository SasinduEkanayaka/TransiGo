// Generated by Dagger (https://dagger.dev).
package com.transigo.app.core.service;

import com.google.firebase.messaging.FirebaseMessaging;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class FcmTokenService_Factory implements Factory<FcmTokenService> {
  private final Provider<FirebaseMessaging> firebaseMessagingProvider;

  public FcmTokenService_Factory(Provider<FirebaseMessaging> firebaseMessagingProvider) {
    this.firebaseMessagingProvider = firebaseMessagingProvider;
  }

  @Override
  public FcmTokenService get() {
    return newInstance(firebaseMessagingProvider.get());
  }

  public static FcmTokenService_Factory create(
      Provider<FirebaseMessaging> firebaseMessagingProvider) {
    return new FcmTokenService_Factory(firebaseMessagingProvider);
  }

  public static FcmTokenService newInstance(FirebaseMessaging firebaseMessaging) {
    return new FcmTokenService(firebaseMessaging);
  }
}
