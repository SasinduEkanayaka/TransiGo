rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isAdmin(uid) {
      return exists(/databases/$(database)/documents/users/$(uid)) &&
             get(/databases/$(database)/documents/users/$(uid)).data.role == "admin";
    }

    match /users/{uid} {
      allow read, create, update: if request.auth != null && request.auth.uid == uid;
      allow list: if false;
    }

    match /bookings/{id} {
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow read: if request.auth != null && (resource.data.userId == request.auth.uid || isAdmin(request.auth.uid));
      allow update: if request.auth != null && (
        (resource.data.userId == request.auth.uid &&
         resource.data.status == "COMPLETED" &&
         request.resource.data.rating != null &&
         request.resource.data.diff(resource.data).changedKeys().hasOnly(['rating'])) ||
        isAdmin(request.auth.uid)
      );
      allow delete: if isAdmin(request.auth.uid);
    }

    match /drivers/{id} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && isAdmin(request.auth.uid);
    }
    // Drivers collection - only admins can manage
    match /drivers/{driverId} {
      allow read: if isAuthenticated() && (resource.data.isActive == true || isAdmin());
      allow create, update, delete: if isAdmin();
    }
  }
}
